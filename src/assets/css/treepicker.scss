@import '_functions';
@import '_vars';

@import '_layout';

@import '_buttons';

@import url('https://fonts.googleapis.com/css?family=Roboto:400,400i,700');


//temp for demo
.treepicker{
    position: absolute;
    top: 0;
    right:0;
}
html, body{
    margin: 0;
    padding: 0;
    min-width: 100vw;
    min-height: 100vh;
}
#app{
    max-width: 100%;
    font-family: 'Roboto', Helvetica, Arial, sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}
*{
    box-sizing: border-box;
}
h5{
    margin: 0;
}






//generic styles

//could use any generic count styling that already exists in RES
.count{
    display: inline-block;

    line-height: 1em;
    text-align: center;

    &.minimal{
        font-size: 0.6857rem;
        font-weight: bold;
        color: inherit;
        opacity: 0.4;
    }
    &:not( .minimal ){
        font-size: 0.625rem;
        transform: translateY( -10% );
        border-radius: 20em;
        padding: 0.5em 0.75em;
        background: rgba( $mediumGray, 0.45 );
        color: white;
        min-width: 2em;
    }
}

input:not([type='checkbox']){
    background: none;
    border: none;
    appearance: none;
    font-family: inherit;
    //font-size: inherit;
    font-weight: 600;
    border-bottom: solid 1px $lightGray;
    outline: 0;
    width: 100%;
    transition: border-bottom-color $time_hover;
    &:focus{
        border-bottom-color: $mediumGray;
    }
}
label{
    display: block;
    font-size: 12px;
    color: $mediumGray;
}

//input and label combo
//label moves when field is focused on valid
.move_label_on_focus{
    position: relative;

    label{
        position: absolute;
        top: 50%;
        transform: translateY( -50% );
        font-size: 1em;
        transition: opacity $time_hover, transform $time_hover;
    }

    input{
        position: relative;
        margin-top: 1em;
        font-weight: bold;
        font-size: 1em;
        padding: 0;
        z-index: 1000;

        //focus or valid state, move label up
        &:focus, &:valid{
            & + label{
                opacity: 0.7;
                transform: translate( -12.5%, -1.4em ) scale( 0.75 );
            }
        }
    }
}

@mixin categoryLabel{
    position: relative;
    margin-bottom:0.75em;
    font-size: 0.6875rem;
    font-weight: bold;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    color: $mediumGray;

    &:before{
        content:"";
        position: absolute;
        top: 50%;
        left: 0;
        width: 100%;
        height: 1px;
        background: $lightGray;
    }

    .title, .count{
        position: relative;
        background: $lightestGray;
    }

    .title{
        padding-right: 0.25em;
    }

    .count{
        margin-left: auto;
        transform:translateY(0.35em);
        padding-left: 0.25em;
        opacity: 1;
        color: $lightGray;
    }
}


.treepicker{
    position: absolute;
    max-width: 100%;
    background: white;
    filter: drop-shadow( 0 0.5em 0.5em rgba( black, 0.2 ) );

    .description{
        margin: 0.5em 0 1em;
        font-size: 0.75rem;
        color: $mediumGray;
    }

    &_tree{
        position: relative;
        max-height: 100vh;
        min-width: 20rem;
        width: 20rem;
        font-size: 0.875em;
        background: $lightestGray;
        padding-bottom: 2em;
        margin: 0.5em;
        border-radius: 5px;
        overflow: scroll;

        .childrenToggle{
            position: relative;
            //padding-left: 1.5em;
            padding-top: 0.5em;
            padding-bottom: 0.5em;
            margin-left: $programIndent;
            transition: color $time_hover;

            .icon{
                position: absolute;
                top: 50%;
                left: 0;
                transform: translateY(-45%);
                color: $mediumGray;
                fill: currentColor;
                stroke: currentColor;
                transition: color $time_hover;

                &:before{
                    content:"";
                    position: absolute;
                    top: 50%;
                    left: -0.55em;
                    width: 0;
                    height: 0;
                    transform: translateY( -0.25em );
                    border-style: solid;
                    border-width: 0.214em 0 0.214em 0.37em;
                    border-color: transparent transparent transparent currentColor;
                    opacity: 0.6;
                    transition: transform $time_hover;
                }
            }

            .typeFlag{
                display: inline-block;
                vertical-align: top;
                margin-top: -0.1em;
                font-size: 0.625rem;
                font-weight: bold;
                color: $lightestGray;
                background: $lightGray;
                border-radius: 3px;
                padding: 0.25em 0.5em;
            }

            //nested programs
            & + .treepicker_tree_program{
                margin-top: $spacingBetweenPrograms * 3;
            }
        }

        //if active filter
        [data-filteractive="true"]{
            & > .childrenToggle{
                color: $color-primary;

                .treepicker_tree_program_authors{
                    opacity: 0.7;
                }

                .icon{
                    color: inherit;
                    &:before{
                        transform: translate( -0.1em, -0.25em ) rotate( 90deg );
                    }
                }
            }
        }
        [data-active="true"]{
            background: white;
            //border-color: white;
            //background: $color-stack-light;
            //border-color: transparent;
            border-color: $color-primary;
            border-width: 2px;
            box-shadow: 0 0.1875em 1.25em rgba(black, 0.15);
            &:hover{
                background: white;
                //background: $color-stack-light;
            }

            .treepicker_tree_program{
                //border-color: rgba( $lightGray, 0.5 );
                &:hover{
                    background: $lightestGray;
                }
            }
        }
        [data-active="parent"]{
            background: $color-stack-light;
            border-color: transparent;
            //box-shadow: 0 0.1875em 1.25em rgba(black, 0.15);
            &:hover{
                background: $color-stack-light;
            }
        }
        [data-active="grandparent"]{
            background: $color-stack-medium;
            border-color: transparent;
            //box-shadow: 0 0.1875em 1.25em rgba(black, 0.15);
            &:hover{
                background: $color-stack-medium;
            }
        }

        //covers the whole background and used to reset filters
        &_reset{
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 2000;
        }

        &_header{
            padding: 1.5em 1.75em 0em;
            background: $lightestGray;
            //border-bottom: solid 2px $lightGray;
            .flex{
                align-items: flex-start;
            }
            .button{
                margin-left: auto;
                z-index: 3000;
            }
            .title{
                margin: 0;
            }
            .subtitle{
                margin: 0.5em 0 0 0;
            }

            .label{
                margin-bottom: 0.65em;
                font-weight: 600;
            }
            .description{
                margin-bottom: 1.5em;
            }

            .program_types{
                margin-top: 0.5em;

                & + .label{
                    margin-top: 2em;
                    margin-bottom: 0;
                }
            }
            .button[data-type='primary']{
                border:solid 1px $lightGray;
                border-radius: 3px;
            }
        }

        /*&_scrollable{
            //max-height: calc( 100vh - 9.5rem );
            padding-bottom: 1em;
            //overflow: scroll;
            .label{
                padding: 0 1em;
                margin-bottom: 0.5em;
                span{
                    font-size: 0.86em;
                    color: $mediumGray;
                }
            }
        }*/

        //categories in the tree
        &_category{
            position: relative;
            margin-left: 1em;
            margin-right: 1em;

            & + &{
                margin-top: 1em;
            }

            &_inner{
                border: solid 1px rgba( $dark, 0.2 );
                border-radius: 5px;
                padding: 0.5em 1.2em;
                transition: background $time_hover, border-color $time_hover, box-shadow $time_hover;
                cursor: pointer;

                &:hover{
                    background: $lightGray;
                }

            }

            &_header{
                & + .treepicker_tree_programGroup{
                    margin-top: $spacingBetweenPrograms * 3;
                }
                .childrenToggle{
                    margin-left: 0;
                }
            }

            &_title{
                @include categoryLabel;
            }
        }

        &_programs{
            position: relative;
            z-index: 3000;
        }

        //programs in the tree
        &_program{
            //border: solid 1px $lightGray;
            color: rgba( $dark, 0.7 );
            border: solid 1px rgba( $dark, 0.2 );
            border-radius: 5px;
            padding: 0.5em 1.2em 0.5em 0.75em;
            transition: background $time_hover, border-color $time_hover, box-shadow $time_hover;

            &:hover{
                background: $lightGray;
            }


            /*&[data-programlevel="1"]{
                margin-left: 0;
            }*/
            &[data-programlevel="2"]{
                margin-left: $programIndent;
            }
            &[data-programlevel="3"]{
                margin-left: $programIndent * 2;
            }

            & + &{
                margin-top: $spacingBetweenPrograms;
            }

            &_authors{
                margin-top: 0.2em;
                font-size: 0.857em;
                color: inherit;
                opacity: 0.4;
                transition: opacity $time_hover;
            }
            &_author{
                & + &{
                    margin-left: -0.2em;
                    &:before{
                        content:", ";
                    }
                }
            }

        }

        //header for type, like programs or indirect
        &_type{
            @include categoryLabel;
            margin-top: 2em;
            margin-left: 1.3em;
            width: calc( 100% - 2em );
            opacity: 0.5;
        }

        &_indirectPrograms{
            margin-top: 1em;
        }
    }


    //search
    &_search{
        //position: sticky;
        //top: -$programColPadding;
        //margin-top: -$programColPadding;
        position: relative;
        //margin-left: -$programColPadding;
        //margin-bottom: 2.75em;
        /*width: calc( 100% + #{ $programColPadding * 2 } );
        padding: 0.5em 1.25em;
        background: white;
        z-index: 1000;*/

        .icon{
            position: absolute;
            top: 0.75em;
            right: 1em;
            svg{
                width: 1em;
                height: 1.15em;
                stroke: $mediumGray;
            }
        }

        &_value{
            height: 2em;
            margin-top: 0.5em;
        }

        &_results{
            font-size: 0.75em;
            color: $mediumGray;
            p{
                margin: 0.4em 0 0 0;
            }
        }
    }

    //cards
    &_programs{
        width: $programMax;
        max-height: 100vh;
        padding: 0 $programColPadding $programColPadding;
        overflow: scroll;

        .title{
            font-size: 1.3125em;
            margin: 0;
        }
        .info{
            margin: 0;
            font-size: 0.875em;
            color: lighten( $mediumGray, 20% );

            p{
                margin: 0;
            }

            &.resultCount{
                margin-left: auto;
            }
            &.currentSelection{
                cursor: pointer;
            }
        }

        &_header{
            position: sticky;
            top: 0;
            margin-left: -$programColPadding;
            margin-bottom: 0.5em;
            width: calc( 100% + #{ $programColPadding * 2 } );
            padding: 1.5em 1.25em 0.5em;
            background: white;
            z-index: 1000;

            &_results{
                margin-top: 1em;
            }

            .hideSelected{
                margin-top: -0.2em;
                margin-left: 0.25em;
            }
        }
    }
    &_program{
        position: relative;
        transition: transform $time_hover;

        & + &{
            margin-top: 0.5em;
        }

        &_inner{
            position: relative;
            padding: 1em;
            border-radius: 4px;
            background: white;
            box-shadow: 0 0.1875em 1.25em rgba( black, 0.15 );
            transition: box-shadow $time_hover;
            cursor: pointer;

            &:before{
                content:"";
                position: absolute;
                top:0;
                left:0;
                width:100%;
                height:100%;
                border-radius: 5px;
                background: $color-selected;
                z-index: -1;
                opacity: 0;
                transition: opacity $time_hover, transform $time_hover;
            }

            &.indirect{
                position: relative;
                border: solid 1px rgba( $lightGray, 0.5 );
                box-shadow: none;
                &:after{
                    content: "Indirect";
                    position: absolute;
                    top: 0.6em;
                    right: 0.75em;
                    color: $lightGray;
                    font-size: 0.6875em;
                    font-weight: bold;
                    text-transform: uppercase;
                }

                .card_title{
                    color: $darkGray;
                }
            }
        }

        .card_title{
            margin: 0;
            color: $dark;
        }
        /*&_id{
            display: block;
            margin-left: auto;
            font-size: 0.6857rem;
            font-weight: bold;
            color: inherit;
            opacity: 0.4;
        }*/

        &_managers{
            margin-top: 0.5em;
        }
        &_manager{
            font-size:0.875em;
            font-style: italic;
            color: $darkGray;
            margin: 0;

            & + &{
                margin-left: 0.75em;
            }

            .avatar, .name{
                vertical-align: middle;
            }
        }

        &_breadcrumbs{
            margin: -1.45em 0 1em -1.45em;
            width: calc( 100% + 2.9em );
            font-size: 0.6875em;
            border-bottom: solid 1px $lightestGray;
            text-transform: capitalize;
            color: rgba( $dark, 0.7 );
            overflow: hidden;
        }
        &_breadcrumb{
            position: relative;
            padding: 0.6em 1em 0.6em 1.4em;
            margin-left: -0.05em;
            z-index: 1;
            &:before, &:after{
                content:"";
                box-sizing: border-box;
                position: absolute;
                left: 0.25em;
                width: 100%;
                height: 50%;
                background: rgba( $lightGray, 0.3 );
                border-right: solid 1px $lightGray;
                z-index: -1;
                transition: background $time_hover, border $time_hover;
            }

            $skewAmount: 25deg;
            &:before{
                top: 0;
                transform: skewX( #{ $skewAmount } );
            }
            &:after{
                top: 50%;
                transform: skewX( -#{ $skewAmount } );
            }

            &:first-of-type{
                margin-left: -0.5em;
                padding-left: 1.8em;
            }
            &:last-of-type{
                &:before, &:after{
                    border-right: 0;
                }
            }

            &.current{
                //color: white;
                &:before, &:after{
                    //background: $color-primary;
                    background: white;
                    border: solid 1px $color-primary;
                }
                &:before{
                    border-bottom: 0;
                }
                &:after{
                    border-top: 0;
                }

                &:first-of-type{
                    margin-left: 0;
                    border-left: solid 1px $color-primary;
                    padding-left: 1.2em;
                    &:before, &:after{
                        border-left: 0;
                    }
                }
            }

            &.parent{
                &:before, &:after{
                    background: $color-stack-light;
                    border-radius: transparent;
                }
            }
            &.grandparent{
                &:before, &:after{
                    background: $color-stack-medium;
                    border-radius: transparent;
                }
            }

        }

        //add button
        .button{
            position: absolute;
            bottom: 1em;
            right: 1em;
            transform: translateX( -1em );
            color: $mediumGray;
            opacity: 0;
            transition: opacity $time_hover, transform $time_hover, border-color $time_hover;
        }


        &:hover{
            .button{
                transform: translateX(0);
                opacity: 1;
            }

            transform: scale( 1.03 );
            .treepicker_program_inner{
                box-shadow: 0 0.35em 1.5em rgba( black, 0.12 );
                //z-index: 100;
            }
        }

        //when selected
        &_inner.selected{
            &:before{
                opacity: 1;
                transform: scale( 1.01, 1.06 ) translate3d( 0,0,0 );
            }
            .button{
                transform: translateX(0);
                opacity: 1;
                background: $color-selected;
                border-color: $color-selected;
                color: $dark;
            }
        }


        //category header only, if program has children
        //not using this after all
        /*&_categoryOnly{
            @include categoryLabel;
            margin-top: 2em;
            opacity: 0.5;
            .title, .count{
                background: white;
            }
        }*/
    }


}
